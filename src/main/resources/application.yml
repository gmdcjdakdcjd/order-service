server:
  port: 9002
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  application:
    name: order-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  r2dbc:
    url: r2dbc:postgresql://polar-postgres:80/polardb_order # PostgreSQL 서비스 이름으로 변경
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    url: jdbc:postgresql://polar-postgres:80/polardb_order # PostgreSQL 서비스 이름으로 변경
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://config-service:80 # Config Server 서비스 이름으로 변경
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
    function:
      definition: dispatchOrder
    stream:
      bindings:
        dispatchOrder-in-0:
          destination: order-dispatched
          group: ${spring.application.name}
        acceptOrder-out-0:
          destination: order-accepted
      rabbit:
        bindings:
          acceptOrder-out-0:
            producer:
              transacted: true
  rabbitmq:
    host: polar-rabbitmq # RabbitMQ 서비스 이름으로 변경
    port: 5672
    connection-timeout: 5s
    # username과 password 필드를 제거하여 인증 없이 연결 가능하게 설정

polar:
  catalog-service-uri: "http://catalog-service:80" # Catalog 서비스 이름으로 변경
